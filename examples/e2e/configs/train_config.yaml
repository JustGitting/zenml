# 

# environment configuration
settings:
  docker:
    required_integrations:
      - aws
      - evidently
      - kubeflow
      - kubernetes
      - mlflow
      - sklearn
      - slack

# configuration of steps  
steps:
  model_trainer:
    parameters:
      name: supply_chain_forecasting
  promote_with_metric_compare:
    parameters:
      mlflow_model_name: supply_chain_forecasting
  notify_on_success:
    parameters:
      notify_on_success: False

# configuration of the Model Control Plane
model:
  name: supply_chain_forecasting
  license: Proprietary
  description: |
    Advanced forecasting model designed to optimize supply chain operations for jet engine manufacturing.
    The model predicts demand, lead times, and inventory requirements for critical jet engine components
    and raw materials, helping maintain optimal production schedules while minimizing inventory costs.
  audience: |
    - Supply Chain Managers
    - Procurement Teams
    - Production Planners
    - Aerospace Manufacturing Operations
  use_cases: |
    - Predicts demand for critical jet engine components up to 12 months in advance
    - Forecasts lead times for specialized materials and parts
    - Optimizes inventory levels for high-value components
    - Identifies potential supply chain bottlenecks
    - Supports just-in-time manufacturing practices
    - Helps reduce working capital tied up in inventory
  limitations: |
    - Requires minimum 3 years of historical data for optimal performance
    - May need recalibration during major market disruptions
    - Limited accuracy for newly introduced components
  ethics: |
    Low to Medium Risk:
    - No personal data processing
    - Critical for aviation safety - requires regular validation
    - Environmental impact considerations in inventory optimization
  tags:
  - supply_chain
  - c2
  - minimal risk

# pipeline level extra configurations
extra:
  notify_on_failure: True
# pipeline level parameters
parameters:
  target_env: production
  # This model configuration will be used for the training stage.
  model_configuration:
    model_package: sklearn.tree
    model_class: DecisionTreeClassifier
    params:
      criterion: gini
      max_depth: 5
      min_samples_leaf: 3